[@page.type: backlog]
[@backlog-item.no: 12]
[@subject: Define Maui DomainModel]

We need to define the DomainModel for Maui.

* define concepts and entities
* do it in the User Manual
  * see rrp://Maui.UserMan/SID/26cb962b-dba6-49dc-85b6-c60a6b963282
* check definitions in the web
  * esp diff between trading system and stock screening

!! Application

An application in the sense of the Maui framework is actually only a bundle of
configurations. It allows the user to manage different sets of configurations
for the same scripts.

!! Script

A script is a piece of code in the MSL which tells the Maui MSL
interpreter what to do.
It can contain any sequence of instructions including: data import,
reporting, calculation, a.s.o.

!! System

A system is a component (e.g. a class) which generates buy and sell
"action signals". Therefore it might use "Signals", "Indicators" and
other data.

!!! Interface

A system is asked by the framework for an action signal for a given day.

!! Signals

Signals are objects that "answer" yes/no for each quotation. This
value doesn't have any other direct meaning (ie it's not buy/sell).
However those results will probably be used by trading systems (in
cunjunction with other informations) to decide what to do
(buy/sell/update a stop/nothing).

Signals generated by a System to indicate e.g. buy/sell actions are called
"action signals".

Signal results can be stored temporary and permanently. An signal can
be defined as prerequisite of a system or another signal. In this case the
framework is taking care that all prerequisites are available when the
calculation of the owner of the dependency is requested.

!!! Interface
A signal object is asked by the framework to store the result (the signal) for
a given day (or day range) in the temporary results cache.

!! Indicator

Indicators are objects which calculate results based on other input data
(e.g. stock prices or other indicators) and settings.

Indicator results can be stored temporary and permanently. An indicator can
be defined as prerequisite of a system or another indicator. In this case the
framework is taking care that all prerequisites are available when the
calculation of the owner of the dependency is requested.

!!! Interface
An indicator object is asked by the framework to store the result for
a given day (or day range) in the temporary results cache.

!! Broker

A broker is a module which calculates real broker's fee and commissions
for each buy/sell order, as well as annual account charge.

!!! Interface
A broker object is aked by the framework for commission for a single order or
for the annual account charge for the whole portfolio.

!! Analyser

Analyzers are general purpose "calculators" (e.g. calculating NetGain, Avg, Max, etc).
Their basic indention is code reuse in iterators and systems.

!!! Interface
Called by the framework to calculate its value for a given day range.
An analyser object is asked by the framework to store the result for
a given day (or day range) in the temporary results cache.

Use needs to be discussed -> maybe indicatores are enough

!! CloseStrategy

A CloseStrategy could be seen as a position manager. Once a system has
opened a position, it is managed by a CloseStrategy. Managing means
updating the stop and deciding when to close the position.

!!! Interface
A close strategy object is asked by the framework for an indicative stop level
(might be used by a MoneyManagementRule) and to manage a given position (the position
may be augmented or reduced by sending new orders).
Furthermore a CloseStrategy will be informed when a new position has been opened.

!! TradeFilter

TradeFilters are used to implement general filters to accept or refuse trades.
They are used to decide whether or not a trade is accepted. It can for example
refuse trade going against the current trend. You can use several trade filters
simultaneously.

!!! Interface
Called by the framework before any money management rule to accept or not
refuse a trade.

!! MoneyManagement (Rule)

MoneyManagement rules implement risk management.
Money management rules decide or modify the sum of money
placed on each trade. On the extreme side, they can cancel
an order by deciding that 0 shares should be bought/sold.

!!! Interface
Called by the framework after the trade filters to manage the quantity of an order.

!! OrderFactory

An OrderFactory is used to create orders of a specific policy when a
system has detected an opportunity.

!!! Interface
Called by the framework (SystemManager) to modify the Portfolio (using
the PortfolioManager).

!! Further concepts and terms

- A TableSchema describes a datum and its properties as it is used in Maui.
- A Series is a list of datums (usually ordered by date).
- A DataProvider describes from where and how to get data for a specific datum.
- A Portfolios is a container for all positions (open and historical positions).
- A Timeframe describes how a date should be interpreted (e.g. daily, weekly, yearly).


